---
- name: Install required packages on new servers
  hosts: all
  become: yes
  tasks:
    - name: Install packages
      package:
        name: "{{ item }}"
        state: present
      loop:
        - tmux
        - vim
        - git

    # Node.js Installation for Fedora/RedHat
    - name: Run NodeSource setup script for RPM-based systems
      ansible.builtin.shell: |
        curl -fsSL https://rpm.nodesource.com/setup_{{ node_version }}.x | bash -
      args:
        # Prevents re-running the setup script if the nodesource repo file already exists
        creates: /etc/yum.repos.d/nodesource-nodejs.repo
      when: ansible_os_family == "RedHat"
      vars:
        node_version: "20" # You can change this to your desired Node.js major version (e.g., "18", "20", "22")

    - name: Install Node.js and npm
      package:
        name: nodejs
        state: present
      # This task runs for both Debian/Ubuntu and RedHat after their respective repo setups
      # No 'when' needed here if it follows platform-specific repo setup.
      # However, for clarity, keep 'when' clauses for each package type.
      when: ansible_os_family == "Debian" or ansible_os_family == "RedHat"

    - name: Install uv (and uvx) via recommended script for ansible_user
      ansible.builtin.shell: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
      args:
        # 'creates' makes this task idempotent: it won't re-run if uv already exists
        # Assuming uv installs into ~/.cargo/bin or ~/.local/bin relative to the user's home.
        # ansible_user_dir is a fact that holds the home directory of the ansible_user.
        creates: "{{ ansible_user_dir }}/.cargo/bin/uv"

    - name: Copy tmux.conf to user's home directory
      copy:
        src: tmux.conf
        dest: ~/.tmux.conf
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0644'
